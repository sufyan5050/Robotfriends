{"version":3,"sources":["componenet/Card.js","componenet/Cardlist.js","componenet/SearchBox.js","componenet/Scroll.js","componenet/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","Cardlist","Robot","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onsearchChange","event","target","value","console","log","fetch","then","Response","json","users","filterRobot","filter","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAgBeA,EAfF,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,KAAKC,EAAa,EAAbA,MAAMC,EAAO,EAAPA,GAEtB,OACE,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,mBACzB,gCACA,6BAAKF,IACL,4BAAIC,WCiBKK,EArBE,SAAC,GAAY,IAAXC,EAAU,EAAVA,MAEf,OACI,8BAEIA,EAAMC,KAAI,SAACC,EAAKC,GACZ,OACM,cAAC,EAAD,CAEAR,GAAIK,EAAMG,GAAGR,GACbF,KAAMO,EAAMG,GAAGV,KACfC,MAAOM,EAAMG,GAAGT,OAHXS,SCMZC,EAfG,SAAC,GAA+B,EAA9BC,YAA+B,IAAnBC,EAAkB,EAAlBA,aAC5B,OACI,qBAAKV,UAAU,MAAf,SACA,uBACAA,UAAW,mCACXW,KAAM,SACNC,YAAa,gBACbC,SAAUH,OCEHI,G,MAVA,SAACC,GACZ,OACE,qBAAKC,MAAO,CAACC,UAAW,SAASC,OAAQ,kBAAmBC,OAAQ,SAApE,SACKJ,EAAMK,aCeFC,E,kDAjBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAS,GAHC,E,qDAMlB,SAAkBC,EAAMC,GACpBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAE5B,WACI,OAAGG,KAAKJ,MAAMC,SACH,6DAEJG,KAAKX,MAAMK,a,GAdCQ,aC4CZC,E,kDAtCX,aAAc,IAAD,8BACT,gBAYJC,eAAiB,SAACC,GACb,EAAKJ,SAAS,CAAClB,YAAYsB,EAAMC,OAAOC,QACxCC,QAAQC,IAAIJ,EAAMC,OAAOC,QAb1B,EAAKX,MAAQ,CACTlB,MAAO,GACPK,YAAY,IAJP,E,qDAOb,WAAoB,IAAD,OACf2B,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKb,SAAS,CAACvB,MAAMoC,S,oBAOxC,WAAS,IAAD,OACEC,EAAcf,KAAKJ,MAAMlB,MAAMsC,QAAO,SAAAtC,GACxC,OAAOA,EAAMP,KAAK8C,cAAcC,SAAS,EAAKtB,MAAMb,YAAYkC,kBAGpE,OACI,sBAAK3C,UAAY,KAAjB,UACA,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,UACA,cAAC,EAAD,CAAU1B,MAAOqC,e,GA7BXb,aCKHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACD,cAAC,EAAD,MAECC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d59d91ee.chunk.js","sourcesContent":["import React from 'react';\nconst Card = ({name,email,id})=> {\n\n    return (\n      <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n          <img alt='robots' src={`https://robohash.org/${id}?size=200x200`} />\n      <div>\n      <h2>{name}</h2>\n      <p>{email}</p>\n\n      </div>\n      </div>  \n\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\n\nconst Cardlist = ({Robot}) =>{\n    \n    return(\n        <div>\n        {\n            Robot.map((user,i) => {\n                return(\n                      <Card\n                      key={i}\n                      id={Robot[i].id}\n                      name={Robot[i].name}\n                      email={Robot[i].email}\n                      />\n                );\n            }\n            )\n        }\n        </div>\n\n    );\n}\nexport default Cardlist;","import React from 'react';\n\n\nconst SearchBox = ({searchfield,searchChange}) => {\n    return(\n        <div className='pa2'>\n        <input \n        className ='pa3 ba b--green bg-lightest-blue'\n        type ='search' \n        placeholder ='Search Robots'\n        onChange={searchChange}    \n        />\n        </div>\n    );\n\n}\n\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n    return(\n      <div style={{overflowY: 'scroll',border: '1px solid black', height: '500px'}}>\n          {props.children}\n      </div>\n    );\n\n};\n\n\nexport default Scroll;","import React,{Component} from \"react\";\n\nclass ErrorBoundry extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            hasError:false\n        }\n    }\n    componentDidCatch(error,info){\n        this.setState({hasError:true})\n    }\n    render(){\n        if(this.state.hasError){\n            return <h1>Oooops Something went wrong</h1>\n        }\n        return this.props.children\n    }\n    \n}\nexport default ErrorBoundry","import React, {Component} from 'react';\nimport Cardlist from '../componenet/Cardlist';\nimport SearchBox from '../componenet/SearchBox';\nimport './App.css';\nimport Scroll from '../componenet/Scroll';\nimport ErrorBoundry from '../componenet/ErrorBoundry';\n\nclass App extends Component {\n    constructor(){\n        super()\n        this.state = {\n            Robot: [],\n            searchfield:''\n        }\n    }\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(Response=>  Response.json())\n        .then(users => this.setState({Robot:users}));\n        \n    }\n    onsearchChange = (event) =>{\n         this.setState({searchfield:event.target.value})\n         console.log(event.target.value);\n    }\n    render(){\n        const filterRobot = this.state.Robot.filter(Robot =>{\n            return Robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n        })\n        \n        return(\n            <div className = 'tc'>\n            <h1 className='f2'>Robofriends</h1>\n            <SearchBox searchChange={this.onsearchChange}/>\n            <Scroll>\n            <ErrorBoundry>\n            <Cardlist Robot={filterRobot}/>\n            </ErrorBoundry>\n            </Scroll> \n            </div>  \n        );\n    }\n\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}